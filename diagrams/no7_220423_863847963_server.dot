digraph "server" {

splines  = ortho;
fontname = "Inconsolata";

node [colorscheme = ylgnbu4];
edge [colorscheme = dark28, dir = both];

AddCommand                                 [shape = record, pos = "102.112,25.292!"  , label = "{ AddCommand | + AddCommand() : \l|+ execute(String[]) : void\l| name : String\l  obj : Route\l  args : String\l  descr : String\l  response : CommandStatusResponse\l }"];
AddIfMaxCommand                            [shape = record, pos = "110.307,25.292!"  , label = "{ AddIfMaxCommand | + AddIfMaxCommand() : \l|+ execute(String[]) : void\l| name : String\l  obj : Route\l  args : String\l  descr : String\l  response : CommandStatusResponse\l }"];
AddIfMinCommand                            [shape = record, pos = "118.775,25.292!"  , label = "{ AddIfMinCommand | + AddIfMinCommand() : \l|+ execute(String[]) : void\l| name : String\l  obj : Route\l  args : String\l  descr : String\l  response : CommandStatusResponse\l }"];
AnnotationProcessor                        [shape = record, pos = "124.322,12.139!"  , label = "{ AnnotationProcessor | + AnnotationProcessor(ServerRequest) : \l|+ proceedAnnotations() : ServerRequest\l }"];
"ArgumentCommandClientRequestWorker<T, Y>" [shape = record, pos = "33.217,20.389!"   , label = "{ ArgumentCommandClientRequestWorker\<T, Y\> | + ArgumentCommandClientRequestWorker() : \l|+ workWithRequest(ServerRequest) : void\l }"];
"ArgumentConsumer<T>"                      [shape = record, pos = "108.488,28.722!"  , label = "{ \<\<interface\>\>\nArgumentConsumer\<T\> |  obj : T\l }"];
AuthorizableCommand                        [shape = record, pos = "38.278,8.667!"    , label = "{ \<\<interface\>\>\nAuthorizableCommand |  callerID : long\l }"];
AuthorizationRequestWorker                 [shape = record, pos = "50.625,20.389!"   , label = "{ AuthorizationRequestWorker | + AuthorizationRequestWorker() : \l|+ workWithRequest(ServerRequest) : void\l }"];
AuthorizeException                         [shape = record, pos = "134.163,28.889!"  , label = "{ AuthorizeException | + AuthorizeException(String) : \l + AuthorizeException(Exception) : \l }"];
AuthorizeManager                           [shape = record, pos = "125.225,16.125!"  , label = "{ AuthorizeManager | + AuthorizeManager() : \l|+ login(CallerBack) : AuthorizedCallerBack\l + register(CallerBack, RegistrationData) : AuthorizedUserData\l + authorize(CallerBack, AuthenticationData) : AuthorizedUserData\l }"];
AuthorizeProcessor                         [shape = record, pos = "137.608,15.792!"  , label = "{ AuthorizeProcessor | + AuthorizeProcessor() : \l|+ proceedRequest(ServerRequest) : ServerRequest\l }"];
AuthorizedCallerBack                       [shape = record, pos = "80.653,21.083!"   , label = "{ AuthorizedCallerBack | + AuthorizedCallerBack(AuthorizedUserData, CallerBack) : \l|+ toString() : String\l + hashCode() : int\l + equals(Object) : boolean\l| userData : AuthorizedUserData\l  callerBack : CallerBack\l }"];
BaseCommand                                [shape = record, pos = "38.267,29.417!"   , label = "{ \<\<interface\>\>\nBaseCommand | + execute(String[]) : void\l| name : String\l  args : String\l  descr : String\l  response : CommandStatusResponse\l }"];
BaseReader                                 [shape = record, pos = "27.375,9.750!"    , label = "{ \<\<interface\>\>\nBaseReader | + readFromFile(String) : LinkedHashMap\<String[], String\>\l }"];
BaseRequestWorker                          [shape = record, pos = "28.884,20.389!"   , label = "{ BaseRequestWorker | + BaseRequestWorker() : \l|+ workWithRequest(ServerRequest) : void\l }"];
BaseWriter                                 [shape = record, pos = "21.014,9.750!"    , label = "{ \<\<interface\>\>\nBaseWriter | + writeToFile(String, LinkedHashMap\<String[], String\>) : void\l }"];
CallerBack                                 [shape = record, pos = "90.418,25.125!"   , label = "{ CallerBack | + CallerBack(InetAddress, int) : \l|+ equals(Object) : boolean\l + hashCode() : int\l + toString() : String\l| address : InetAddress\l  port : int\l }"];
CannotProceedException                     [shape = record, pos = "143.131,20.194!"  , label = "{ CannotProceedException | + CannotProceedException(Exception) : \l }"];
ClearCommand                               [shape = record, pos = "56.489,24.958!"   , label = "{ ClearCommand | + ClearCommand() : \l|+ execute(String[]) : void\l| name : String\l  response : CommandStatusResponse\l  descr : String\l }"];
ClientHandler                              [shape = record, pos = "101.750,21.250!"  , label = "{ ClientHandler | ~ availability : boolean\l|+ restartTimer() : void\l + actionPerformed(ActionEvent) : void\l + allowNewCallerBack() : void\l + approveCallerBack(CallerBack) : void\l| instance : ClientHandler\l  availability : boolean\l }"];
"CollectionHandler<T, E>"                  [shape = record, pos = "-2.729,9.750!"    , label = "{ \<\<interface\>\>\nCollectionHandler\<T, E\> | + addElementToCollection(E) : void\l + sort() : void\l + getMax(Comparator\<E\>) : E\l + getMin(Comparator\<E\>) : E\l + clearCollection() : void\l + validateElements() : void\l| lastElement : E\l  sorted : T\l  firstOrNew : E\l  collection : T\l  initDate : Date\l }"];
CommandAuthorizePreProcessor               [shape = record, pos = "3.236,8.153!"     , label = "{ CommandAuthorizePreProcessor | + CommandAuthorizePreProcessor() : \l|+ proceed(BaseCommand, CallerBack, ServerConnection) : void\l }"];
CommandClientRequestWorker                 [shape = record, pos = "54.958,20.389!"   , label = "{ CommandClientRequestWorker | + CommandClientRequestWorker() : \l|+ workWithRequest(ServerRequest) : void\l }"];
CommandConfigureRequestWorker              [shape = record, pos = "45.847,20.389!"   , label = "{ CommandConfigureRequestWorker | + CommandConfigureRequestWorker() : \l|+ workWithRequest(ServerRequest) : void\l }"];
CommandConfigureResponseSender             [shape = record, pos = "63.847,9.750!"    , label = "{ CommandConfigureResponseSender | + CommandConfigureResponseSender() : \l|+ sendResponse(CommandDescriptionsResponse, ServerConnection, CallerBack) : void\l }"];
CommandExporter                            [shape = record, pos = "85.611,9.750!"    , label = "{ CommandExporter | + CommandExporter() : \l| commandsToExport : ArrayList\<CommandDescription\>\l }"];
CommandManager                             [shape = record, pos = "-2.931,24.986!"   , label = "{ CommandManager | + CommandManager() : \l|~ commands : LinkedHashMap\<String, BaseCommand\>\l|+ executeCommand(CommandClientRequest, CallerBack, ServerConnection) : void\l + fromDescription(CommandDescription) : BaseCommand\l| commands : LinkedHashMap\<String, BaseCommand\>\l }"];
CommandPreProcessor                        [shape = record, pos = "1.688,9.750!"     , label = "{ \<\<interface\>\>\nCommandPreProcessor | + proceed(BaseCommand, CallerBack, ServerConnection) : void\l }"];
CommandPreProcessorManager                 [shape = record, pos = "1.542,6.167!"     , label = "{ CommandPreProcessorManager | + CommandPreProcessorManager() : \l|+ preProceed(BaseCommand, CallerBack, ServerConnection) : void\l }"];
CommandResponseSender                      [shape = record, pos = "56.319,9.750!"    , label = "{ CommandResponseSender | + CommandResponseSender() : \l|+ sendResponse(CommandStatusResponse, ServerConnection, CallerBack) : void\l }"];
CountGreaterThanDistanceCommand            [shape = record, pos = "85.390,25.125!"   , label = "{ CountGreaterThanDistanceCommand | + CountGreaterThanDistanceCommand() : \l|+ execute(String[]) : void\l| name : String\l  args : String\l  descr : String\l  response : CommandStatusResponse\l }"];
"DBCollectionLoader<T>"                    [shape = record, pos = "17.889,20.556!"   , label = "{ DBCollectionLoader\<T\> | + DBCollectionLoader(T) : \l|+ loadFromDB() : void\l + close() : void\l }"];
DBCollectionManager                        [shape = record, pos = "4.563,20.194!"    , label = "{ DBCollectionManager | + close() : void\l }"];
DBElementCreatorLogic                      [shape = record, pos = "13.215,20.194!"   , label = "{ DBElementCreatorLogic | + close() : void\l }"];
DBIntegrationUtility                       [shape = record, pos = "7.562,16.653!"    , label = "{ DBIntegrationUtility | + DBIntegrationUtility() : \l|+ removeFromCollectionAndDB(long, long) : boolean\l + addRouteToDBAndCollection(Route, long) : StatusResponse\l + getAccessibleCollection(long, Supplier\<T\>) : T\l + updateElementInDBAndCollection(Route, long, long) : StatusResponse\l + clearCollectionInDBAndMemory(long) : StatusResponse\l| instance : DBIntegrationUtility\l }"];
DBUserManager                              [shape = record, pos = "130.780,20.889!"  , label = "{ DBUserManager | + DBUserManager(PasswordEncryption) : \l|+ addUserToDatabase(CallerBack, RegistrationData) : AuthorizedUserData\l + checkExistence(String) : boolean\l + getUserFromDatabase(AuthenticationData) : AuthorizedUserData\l + close() : void\l }"];
DatagramServerConnection                   [shape = record, pos = "117.077,20.361!"  , label = "{ DatagramServerConnection | + sendData(byte[], InetAddress, int) : void\l + listenAndGetData() : StatusRequest\l }"];
DatagramServerConnectionFactory            [shape = record, pos = "70.608,20.389!"   , label = "{ DatagramServerConnectionFactory | + DatagramServerConnectionFactory() : \l|+ initializeServer(int) : ServerConnection\l }"];
DateEditor                                 [shape = record, pos = "9.764,9.750!"     , label = "{ DateEditor | + DateEditor() : \l|+ addPropertyChangeListener(PropertyChangeListener) : void\l + removePropertyChangeListener(PropertyChangeListener) : void\l + paintValue(Graphics, Rectangle) : void\l + supportsCustomEditor() : boolean\l| asText : String\l  customEditor : Component\l  javaInitializationString : String\l  paintable : boolean\l  value : Object\l  tags : String[]\l }"];
ElementNotAddedException                   [shape = record, pos = "4.222,24.236!"    , label = "{ ElementNotAddedException | + ElementNotAddedException() : \l }"];
ExecuteScriptCommand                       [shape = record, pos = "77.196,25.319!"   , label = "{ ExecuteScriptCommand | + ExecuteScriptCommand() : \l|~ response : CommandStatusResponse\l|+ execute(String[]) : void\l| name : String\l  args : String\l  descr : String\l  response : CommandStatusResponse\l }"];
ExitCommand                                [shape = record, pos = "48.059,24.958!"   , label = "{ ExitCommand | + ExitCommand() : \l|+ execute(String[]) : void\l| name : String\l  response : CommandStatusResponse\l  descr : String\l }"];
HelpCommand                                [shape = record, pos = "98.015,24.958!"   , label = "{ HelpCommand | + HelpCommand() : \l|+ execute(String[]) : void\l| name : String\l  response : CommandStatusResponse\l  descr : String\l }"];
InfoCommand                                [shape = record, pos = "43.962,24.958!"   , label = "{ InfoCommand | + InfoCommand() : \l|+ execute(String[]) : void\l| name : String\l  response : CommandStatusResponse\l  descr : String\l }"];
IntermediateResponseSender                 [shape = record, pos = "71.236,9.750!"    , label = "{ IntermediateResponseSender | + IntermediateResponseSender() : \l|+ sendLargeResponse(ByteArrayOutputStream, CallerBack, ServerConnection) : void\l }"];
InvalidRequestException                    [shape = record, pos = "134.931,9.750!"   , label = "{ InvalidRequestException | + InvalidRequestException(String) : \l }"];
JDBCAddElementToDBTest                     [shape = record, pos = "130.611,9.750!"   , label = "{ JDBCAddElementToDBTest | + JDBCAddElementToDBTest() : \l }"];
JDBCLoadDBTest                             [shape = record, pos = "18.229,15.792!"   , label = "{ JDBCLoadDBTest | + JDBCLoadDBTest() : \l|+ test() : void\l }"];
JDBCRemoveElementFromDBTest                [shape = record, pos = "106.875,9.750!"   , label = "{ JDBCRemoveElementFromDBTest | + JDBCRemoveElementFromDBTest() : \l }"];
JDBCUpdateElementInDBTest                  [shape = record, pos = "126.028,9.750!"   , label = "{ JDBCUpdateElementInDBTest | + JDBCUpdateElementInDBTest() : \l }"];
"Loader<T, E>"                             [shape = record, pos = "42.625,9.750!"    , label = "{ Loader\<T, E\> | + Loader(Class\<T\>, Class\<E\>) : \l|+ loadFromFile(String, BaseReader) : T\l + setupConverter(Class\<?\>, Class\<PropertyEditor\>) : void\l + loadFromXMLbyEnvKey(String) : T\l }"];
LoginAndTryToSendCommandTest               [shape = record, pos = "71.823,15.792!"   , label = "{ LoginAndTryToSendCommandTest | + LoginAndTryToSendCommandTest() : \l|+ test() : void\l }"];
LoginTest                                  [shape = record, pos = "92.597,20.389!"   , label = "{ LoginTest | + LoginTest() : \l|+ test() : void\l }"];
Main                                       [shape = record, pos = "103.972,9.750!"   , label = "{ Main | + Main() : \l|+ main(String[]) : void\l }"];
Main                                       [shape = record, pos = "61.757,15.792!"   , label = "{ Main | + Main() : \l|+ main(String[]) : void\l }"];
MinByCreationDateCommand                   [shape = record, pos = "93.835,24.958!"   , label = "{ MinByCreationDateCommand | + MinByCreationDateCommand() : \l|+ execute(String[]) : void\l| name : String\l  response : CommandStatusResponse\l  descr : String\l }"];
NotAvailableException                      [shape = record, pos = "97.778,20.389!"   , label = "{ NotAvailableException | + NotAvailableException(CallerBack) : \l| deniedClient : CallerBack\l }"];
PasswordEncryption                         [shape = record, pos = "126.969,24.597!"  , label = "{ \<\<interface\>\>\nPasswordEncryption | + generateSalt() : char[]\l + encrypt(char[]) : String\l| pepper : char[]\l }"];
PasswordEncryptionImplSHA512               [shape = record, pos = "125.590,20.556!"  , label = "{ PasswordEncryptionImplSHA512 | + PasswordEncryptionImplSHA512() : \l|+ generateSalt() : char[]\l + encrypt(char[]) : String\l }"];
PreProceedingFailedException               [shape = record, pos = "121.417,9.750!"   , label = "{ PreProceedingFailedException | + PreProceedingFailedException() : \l }"];
PreProcessingCommandInterface              [shape = record, pos = "37.722,9.750!"    , label = "{ \<\<interface\>\>\nPreProcessingCommandInterface |  }"];
PrintFieldDistanceAscendingCommand         [shape = record, pos = "10.365,24.958!"   , label = "{ PrintFieldDistanceAscendingCommand | + PrintFieldDistanceAscendingCommand() : \l|+ execute(String[]) : void\l| name : String\l  response : CommandStatusResponse\l  descr : String\l }"];
ProcessionInterruptedException             [shape = record, pos = "111.889,9.750!"   , label = "{ ProcessionInterruptedException | + ProcessionInterruptedException() : \l }"];
RegisterTest                               [shape = record, pos = "90.250,20.389!"   , label = "{ RegisterTest | + RegisterTest() : \l|+ test() : void\l }"];
RegistrationFailedException                [shape = record, pos = "143.398,24.236!"  , label = "{ RegistrationFailedException | + RegistrationFailedException(String) : \l }"];
RegistrationRequestWorker                  [shape = record, pos = "41.514,20.389!"   , label = "{ RegistrationRequestWorker | + RegistrationRequestWorker() : \l|+ workWithRequest(ServerRequest) : void\l }"];
RemoveByIdCommand                          [shape = record, pos = "81.293,25.125!"   , label = "{ RemoveByIdCommand | + RemoveByIdCommand() : \l|+ execute(String[]) : void\l| name : String\l  args : String\l  descr : String\l  response : CommandStatusResponse\l }"];
RemoveGreaterCommand                       [shape = record, pos = "122.872,25.292!"  , label = "{ RemoveGreaterCommand | + RemoveGreaterCommand() : \l|+ execute(String[]) : void\l| name : String\l  obj : Route\l  args : String\l  descr : String\l  response : CommandStatusResponse\l }"];
RequestAnnotationProcessor                 [shape = record, pos = "137.964,20.194!"  , label = "{ \<\<interface\>\>\nRequestAnnotationProcessor | + proceedRequest(ServerRequest) : ServerRequest\l }"];
RequestReader                              [shape = record, pos = "59.306,20.389!"   , label = "{ RequestReader | + RequestReader(InputStream) : \l|+ readObject() : BaseRequest\l }"];
RequestWorker                              [shape = record, pos = "52.156,24.236!"   , label = "{ \<\<interface\>\>\nRequestWorker | + workWithRequest(ServerRequest) : void\l }"];
RequestWorkerManager                       [shape = record, pos = "62.833,20.389!"   , label = "{ RequestWorkerManager | + RequestWorkerManager() : \l|+ workWithRequest(ServerRequest) : void\l }"];
ResourceStreamLogic                        [shape = record, pos = "126.810,28.917!"  , label = "{ ResourceStreamLogic | + ResourceStreamLogic(String) : \l| resourceStream : InputStream\l }"];
ResponseSender                             [shape = record, pos = "78.514,9.750!"    , label = "{ ResponseSender | + ResponseSender() : \l|+ sendResponse(BaseResponse, ServerConnection, CallerBack) : void\l }"];
RouteComparator                            [shape = record, pos = "100.375,9.750!"   , label = "{ RouteComparator | + RouteComparator() : \l|+ compare(Route, Route) : int\l }"];
RouteCreationDateComparator                [shape = record, pos = "91.542,9.750!"    , label = "{ RouteCreationDateComparator | + RouteCreationDateComparator() : \l|+ compare(Route, Route) : int\l }"];
RouteDistanceComparator                    [shape = record, pos = "96.194,9.750!"    , label = "{ RouteDistanceComparator | + RouteDistanceComparator() : \l|+ compare(Route, Route) : int\l }"];
RouteIDHandler                             [shape = record, pos = "52.875,9.750!"    , label = "{ RouteIDHandler | + RouteIDHandler() : \l| instance : RouteIDHandler\l  nextID : Long\l }"];
RoutesHandler                              [shape = record, pos = "-2.931,4.792!"    , label = "{ RoutesHandler | + getMax(Comparator\<Route\>) : Route\l + sort() : void\l + addElementToCollection(Route) : void\l + clearCollection() : void\l + validateElements() : void\l + getMin(Comparator\<Route\>) : Route\l| sorted : HashSet\<Route\>\l  firstOrNew : Route\l  instance : RoutesHandler\l  collection : HashSet\<Route\>\l  initDate : Date\l  lastElement : Route\l }"];
SaveCommand                                [shape = record, pos = "15.559,24.958!"   , label = "{ SaveCommand | + SaveCommand() : \l|+ execute(String[]) : void\l| name : String\l  response : CommandStatusResponse\l  descr : String\l }"];
"Saver<T, E>"                              [shape = record, pos = "33.653,9.750!"    , label = "{ Saver\<T, E\> | + Saver(Class\<E\>) : \l|+ saveCollection(T, String) : void\l }"];
ServerCommandManager                       [shape = record, pos = "21.500,20.389!"   , label = "{ ServerCommandManager | + ServerCommandManager() : \l|+ executeCommand(String[]) : void\l }"];
ServerConnection                           [shape = record, pos = "114.428,24.403!"  , label = "{ \<\<interface\>\>\nServerConnection | + sendData(byte[], InetAddress, int) : void\l + listenAndGetData() : StatusRequest\l }"];
ServerConnectionFactory                    [shape = record, pos = "70.906,24.236!"   , label = "{ \<\<interface\>\>\nServerConnectionFactory | + initializeServer(int) : ServerConnection\l }"];
ServerRequest                              [shape = record, pos = "110.827,20.722!"  , label = "{ ServerRequest | + ServerRequest(BaseRequest, CallerBack, ServerConnection) : \l| from : CallerBack\l  userRequest : BaseRequest\l  connection : ServerConnection\l }"];
Session                                    [shape = record, pos = "83.546,16.819!"   , label = "{ Session | + Session(AuthorizedCallerBack) : \l|+ actionPerformed(ActionEvent) : void\l + hashCode() : int\l + updateTimer() : void\l + toString() : String\l + equals(Object) : boolean\l| sessionId : long\l  authorizedCallerBack : AuthorizedCallerBack\l }"];
SessionHandler                             [shape = record, pos = "83.536,12.639!"   , label = "{ SessionHandler | + registerSession(AuthorizedCallerBack) : void\l + getSession(CallerBack) : Session\l + removeSession(long) : void\l| allSessions : HashSet\<Session\>\l  instance : SessionHandler\l }"];
ShowCommand                                [shape = record, pos = "60.587,24.958!"   , label = "{ ShowCommand | + ShowCommand() : \l|+ execute(String[]) : void\l| name : String\l  response : CommandStatusResponse\l  descr : String\l }"];
ShowSessions                               [shape = record, pos = "23.865,24.958!"   , label = "{ ShowSessions | + ShowSessions() : \l|+ execute(String[]) : void\l| name : String\l  response : CommandStatusResponse\l  descr : String\l }"];
StatusRequest                              [shape = record, pos = "94.667,20.722!"   , label = "{ StatusRequest | + StatusRequest() : \l| inputStream : InputStream\l  code : int\l  callerBack : CallerBack\l }"];
StatusRequestBuilder                       [shape = record, pos = "92.446,16.292!"   , label = "{ StatusRequestBuilder | + build() : StatusRequest\l + initialize() : StatusRequestBuilder\l| objectStream : InputStream\l  code : int\l  callerBack : CallerBack\l }"];
StatusResponse                             [shape = record, pos = "7.896,20.722!"    , label = "{ \<\<record\>\>\nStatusResponse | + StatusResponse(String, int) : \l|+ toCommandResponse() : CommandStatusResponse\l + response() : String\l + code() : int\l }"];
UnauthorizedException                      [shape = record, pos = "136.037,24.236!"  , label = "{ UnauthorizedException | + UnauthorizedException(String) : \l }"];
UnknownCommandException                    [shape = record, pos = "19.656,24.236!"   , label = "{ UnknownCommandException | + UnknownCommandException(String) : \l }"];
UnregisteredException                      [shape = record, pos = "139.732,24.236!"  , label = "{ UnregisteredException | + UnregisteredException(String) : \l }"];
UnsupportedRequestException                [shape = record, pos = "116.681,9.750!"   , label = "{ UnsupportedRequestException | + UnsupportedRequestException(String) : \l }"];
UpdateCommand                              [shape = record, pos = "106.210,25.292!"  , label = "{ UpdateCommand | + UpdateCommand() : \l|+ execute(String[]) : void\l| name : String\l  obj : Route\l  args : String\l  descr : String\l  response : CommandStatusResponse\l }"];
Utilities                                  [shape = record, pos = "48.736,9.750!"    , label = "{ Utilities | + Utilities() : \l|+ isNotNumeric(String) : boolean\l + handleUserInputID(String) : Long?\l }"];
Wrapper                                    [shape = record, pos = "33.431,5.972!"    , label = "{ Wrapper | + isWrapperType(Class\<?\>) : boolean\l }"];
WrongPasswordException                     [shape = record, pos = "147.468,24.236!"  , label = "{ WrongPasswordException | + WrongPasswordException(String) : \l }"];
XMLReader                                  [shape = record, pos = "27.375,8.181!"    , label = "{ XMLReader | + XMLReader() : \l|+ readFromFile(String) : LinkedHashMap\<String[], String\>\l }"];
XMLWriter                                  [shape = record, pos = "21.014,8.181!"    , label = "{ XMLWriter | + XMLWriter() : \l|+ writeToFile(String, LinkedHashMap\<String[], String\>) : void\l }"];
build                                      [shape = record, pos = "16.514,9.750!"    , label = "{ build | + build() : \l|+ setProperty(String, Object) : void\l + invokeMethod(String, Object) : Object\l + getProperty(String) : Object\l + main(String[]) : void\l + run() : Object\l| metaClass : MetaClass\l }"];

AddCommand                                 -> "ArgumentConsumer<T>"                      [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
AddCommand                                 -> BaseCommand                                [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
AddIfMaxCommand                            -> "ArgumentConsumer<T>"                      [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
AddIfMaxCommand                            -> BaseCommand                                [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
AddIfMinCommand                            -> "ArgumentConsumer<T>"                      [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
AddIfMinCommand                            -> BaseCommand                                [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
AnnotationProcessor                        -> AuthorizeProcessor                         [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
AnnotationProcessor                        -> RequestAnnotationProcessor                 [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "loadedAnnotations\n*"];
AnnotationProcessor                        -> ServerRequest                              [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "requestToProceed\n1"];
"ArgumentCommandClientRequestWorker<T, Y>" -> RequestWorker                              [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
AuthorizableCommand                        -> PreProcessingCommandInterface              [color = "#008200", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
AuthorizationRequestWorker                 -> RequestWorker                              [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
AuthorizeManager                           -> AuthorizeException                         [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
AuthorizeManager                           -> AuthorizedCallerBack                       [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
AuthorizeManager                           -> DBUserManager                              [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
AuthorizeManager                           -> PasswordEncryptionImplSHA512               [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
AuthorizeProcessor                         -> CannotProceedException                     [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
AuthorizeProcessor                         -> RequestAnnotationProcessor                 [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
AuthorizeProcessor                         -> ServerRequest                              [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
AuthorizedCallerBack                       -> CallerBack                                 [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
AuthorizedCallerBack                       -> CallerBack                                 [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "callerBack\n1"];
BaseRequestWorker                          -> RequestWorker                              [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
ClearCommand                               -> BaseCommand                                [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
ClientHandler                              -> CallerBack                                 [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "callerBack\n1"];
CommandAuthorizePreProcessor               -> CommandPreProcessor                        [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
CommandClientRequestWorker                 -> RequestWorker                              [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
CommandConfigureRequestWorker              -> RequestWorker                              [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
CommandManager                             -> BaseCommand                                [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "commands\n*"];
CommandPreProcessorManager                 -> CommandAuthorizePreProcessor               [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
CommandPreProcessorManager                 -> CommandPreProcessor                        [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "preProcessorLinkedHashMap\n*"];
CountGreaterThanDistanceCommand            -> BaseCommand                                [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
DBCollectionManager                        -> ElementNotAddedException                   [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
DBIntegrationUtility                       -> "DBCollectionLoader<T>"                    [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
DBIntegrationUtility                       -> DBCollectionManager                        [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
DBIntegrationUtility                       -> DBElementCreatorLogic                      [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
DBIntegrationUtility                       -> StatusResponse                             [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
DBUserManager                              -> PasswordEncryption                         [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "encryptionAlg\n1"];
DBUserManager                              -> RegistrationFailedException                [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
DBUserManager                              -> UnregisteredException                      [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
DBUserManager                              -> WrongPasswordException                     [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
DatagramServerConnection                   -> ServerConnection                           [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
DatagramServerConnectionFactory            -> ServerConnectionFactory                    [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
ExecuteScriptCommand                       -> BaseCommand                                [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
ExitCommand                                -> BaseCommand                                [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
HelpCommand                                -> BaseCommand                                [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
InfoCommand                                -> BaseCommand                                [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
JDBCLoadDBTest                             -> "DBCollectionLoader<T>"                    [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
LoginAndTryToSendCommandTest               -> CallerBack                                 [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
LoginAndTryToSendCommandTest               -> DatagramServerConnectionFactory            [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
LoginAndTryToSendCommandTest               -> RequestWorkerManager                       [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
LoginAndTryToSendCommandTest               -> ServerRequest                              [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
LoginTest                                  -> CallerBack                                 [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
Main                                       -> "DBCollectionLoader<T>"                    [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
Main                                       -> DatagramServerConnectionFactory            [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
Main                                       -> RequestReader                              [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
Main                                       -> RequestWorkerManager                       [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
Main                                       -> ServerCommandManager                       [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
Main                                       -> ServerRequest                              [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
MinByCreationDateCommand                   -> BaseCommand                                [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
NotAvailableException                      -> CallerBack                                 [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "deniedClient\n1"];
PasswordEncryption                         -> ResourceStreamLogic                        [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
PasswordEncryptionImplSHA512               -> PasswordEncryption                         [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
PrintFieldDistanceAscendingCommand         -> BaseCommand                                [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
RegisterTest                               -> CallerBack                                 [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
RegistrationFailedException                -> AuthorizeException                         [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
RegistrationRequestWorker                  -> RequestWorker                              [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
RemoveByIdCommand                          -> BaseCommand                                [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
RemoveGreaterCommand                       -> "ArgumentConsumer<T>"                      [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
RemoveGreaterCommand                       -> BaseCommand                                [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
RequestWorkerManager                       -> RequestWorker                              [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "workers\n*"];
RoutesHandler                              -> "CollectionHandler<T, E>"                  [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
SaveCommand                                -> BaseCommand                                [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
ServerCommandManager                       -> BaseCommand                                [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "serverCommands\n*"];
ServerCommandManager                       -> ShowSessions                               [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
ServerCommandManager                       -> UnknownCommandException                    [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
ServerRequest                              -> CallerBack                                 [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "from\n1"];
ServerRequest                              -> ServerConnection                           [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "connection\n1"];
Session                                    -> AuthorizedCallerBack                       [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "callerBack\n1"];
SessionHandler                             -> Session                                    [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "sessions\n*"];
SessionHandler                             -> Session                                    [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
SessionHandler                             -> UnauthorizedException                      [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
ShowCommand                                -> BaseCommand                                [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
ShowSessions                               -> BaseCommand                                [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
StatusRequest                              -> CallerBack                                 [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "callerBack\n1"];
StatusRequestBuilder                       -> StatusRequest                              [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "result\n1"];
UnauthorizedException                      -> AuthorizeException                         [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
UnregisteredException                      -> AuthorizeException                         [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
UpdateCommand                              -> "ArgumentConsumer<T>"                      [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
UpdateCommand                              -> BaseCommand                                [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
Wrapper                                    -> "Saver<T, E>"                              [color = "#820000", style = solid , arrowtail = odot    , arrowhead = none    , taillabel = "", label = "", headlabel = ""];
WrongPasswordException                     -> AuthorizeException                         [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
XMLReader                                  -> BaseReader                                 [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
XMLWriter                                  -> BaseWriter                                 [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];

}
